apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: redis
  labels:
    app: redis
spec:
  ports:
  - port: 6377
    name: peer
  - port: 16377
    name: cluster
  # *.redis.default.svc.cluster.local
  clusterIP: None
  selector:
    app: redis
---
apiVersion: v1
data:
  cluster.conf: |
    port 6377
    appendonly yes
    cluster-enabled yes
    cluster-config-file /var/lib/redis_conf/NAME.conf
    cluster-node-timeout 5000
    dir /var/lib/redis
kind: ConfigMap
metadata:
  name: redis-conf
  labels:
    app: redis
  namespace: default
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 7
  template:
    metadata:
      labels:
        app: redis
        role: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - vm172-16-16-35.ksc.com
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: redis
          image: harbor.qyvideo.net/redis_k8s/redis:v0.3
          imagePullPolicy: Always
          command:
            - bash
            - "-c"
            - |
              cp /etc/redis/cluster.conf ./my-cluster.conf
              sed -i s/NAME/${POD_NAME}/g ./my-cluster.conf
              redis-server ./my-cluster.conf --protected-mode no
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
          ports:
            - name: redis
              containerPort: 6377
              protocol: "TCP"
            - name: cluster
              containerPort: 16377
              protocol: "TCP"
          volumeMounts:
            - name: "conf"
              mountPath: "/etc/redis"
            - name: "data"
              mountPath: "/var/lib/redis"
            - name: "node-conf"
              mountPath: "/var/lib/redis_conf/"
        - name: "cluster-meet"
          image: harbor.qyvideo.net/redis_k8s/redis:v0.3
          imagePullPolicy: Always
          command:
          - bash
          - "-c"
          - |
            set -e
            nslookup redis | awk '/^Address: / { print $2 }' | /usr/local/bin/cluster-meet.sh
            # Don't crash loop
            sleep infinity
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: PORT
            value: "6377"
      volumes:
        - name: "data"
          hostPath:
            path: /data/redis_data/
            type: DirectoryOrCreate
        - name: "node-conf"
          persistentVolumeClaim:
            claimName: "myclaim1"
        - name: "conf"
          configMap:
            name: "redis-conf"
            items:
              - key: "cluster.conf"
                path: "cluster.conf"
